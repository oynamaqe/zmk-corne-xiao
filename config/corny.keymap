#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        Left_Pos_Hold_Tap: Left_Pos_Hold_Tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POS_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 31 32 33 34 35 36 37 41 42 43>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };

        Right_Pos_Hold_Tap: Right_Pos_Hold_Tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POS_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 17 40 29 39 38 0 1 2 3 4 12 13 14 15 16 24 25 26 27 28 30>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                    |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |                    |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |  MUTE  |  |        |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                    | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q                          &kp W                          &kp E                              &kp R                            &kp T                                    &kp Y      &kp U                             &kp I                               &kp O                           &kp P                                   &kp ESC
&kp BSPC   &Left_Pos_Hold_Tap LEFT_GUI A  &Left_Pos_Hold_Tap LEFT_ALT S  &Left_Pos_Hold_Tap LEFT_CONTROL D  &Left_Pos_Hold_Tap LEFT_SHIFT F  &kp G                                    &kp H      &Right_Pos_Hold_Tap LEFT_SHIFT J  &Right_Pos_Hold_Tap LEFT_CONTROL K  &Right_Pos_Hold_Tap LEFT_ALT L  &Right_Pos_Hold_Tap LEFT_GUI SEMICOLON  &kp SQT
&kp LSHFT  &kp Z                          &kp X                          &kp C                              &kp V                            &kp B    &kp ENTER  &kp LA(PRINTSCREEN)  &kp N      &kp M                             &kp COMMA                           &kp DOT                         &kp FSLH                                &kp RIGHT_ALT
                                                                         &kp LGUI                           &mo 1                            &kp RET                                  &kp SPACE  &mo 2                             &kp RIGHT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp LC(LA(TAB)) LC(LS(LA(TAB)))>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |                    |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |                    | LFT | DWN |  UP | RGT |     |  F12 |
            // | SHFT | F1  | F2  | F3  | F4  | F5  |  boot  |  |        |  F6 | F7  | F8  | F9  | F10 |  F11 |
            //                    | GUI |     | SPC |                    | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                      &kp CARET  &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &kp N1           &kp N2       &kp N3     &kp N4      &kp N5                           &kp N6     &kp N7         &kp N8             &kp N9                &kp N0                 &trans
&kp LSHFT  &trans           &trans       &trans     &trans      &trans       &bootloader  &none  &trans     &trans         &trans             &trans                &trans                 &trans
                                         &kp LGUI   &trans      &kp RET                          &kp SPACE  &trans         &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |                    |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |        |  |  boot  |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |                    | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1  &kp F2   &kp F3    &kp F4   &trans                       &trans     &trans          &trans             &kp LPAR        &kp RPAR         &trans
&trans     &kp F5  &kp F6   &kp F7    &kp F8   &trans                       &kp EQUAL  &kp MINUS       &kp BACKSLASH      &kp LBKT        &kp RBKT         &kp GRAVE
&kp LSHFT  &kp F9  &kp F10  &kp F11   &kp F12  &trans   &none  &bootloader  &kp PLUS   &kp UNDERSCORE  &kp PIPE           &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp TILDE
                            &kp LGUI  &trans   &kp RET                      &kp SPACE  &trans          &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        combo_layer {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans                        &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        combo_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
